"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8180],{9458:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>r,toc:()=>a});var o=i(4848),t=i(8453);const l={},s="config.py",r={id:"src/sunholo/utils/config",title:"config.py",description:"Source: src/sunholo/utils/config.py",source:"@site/docs/src/sunholo/utils/config.md",sourceDirName:"src/sunholo/utils",slug:"/src/sunholo/utils/config",permalink:"/docs/src/sunholo/utils/config",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/src/sunholo/utils/config.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"api_key.py",permalink:"/docs/src/sunholo/utils/api_key"},next:{title:"config_class.py",permalink:"/docs/src/sunholo/utils/config_class"}},c={},a=[{value:"Functions",id:"functions",level:2},{value:"load_config(filename: str = None) -&gt; tuple[dict, str]",id:"load_configfilename-str--none---tupledict-str",level:3},{value:"load_all_configs()",id:"load_all_configs",level:3},{value:"load_config_key(key: str, vector_name: str, kind: str)",id:"load_config_keykey-str-vector_name-str-kind-str",level:3},{value:"get_module_filepath(filepath: str)",id:"get_module_filepathfilepath-str",level:3},{value:"reload_config_file(config_file, filename)",id:"reload_config_fileconfig_file-filename",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"configpy",children:"config.py"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.em,{children:"Source"}),": ",(0,o.jsx)(n.a,{href:"https://github.com/sunholo-data/sunholo-py/blob/main/src/sunholo/utils/config.py",children:"src/sunholo/utils/config.py"})]}),"\n",(0,o.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,o.jsx)(n.h3,{id:"load_configfilename-str--none---tupledict-str",children:"load_config(filename: str = None) -> tuple[dict, str]"}),"\n",(0,o.jsxs)(n.p,{children:["Load configuration from a yaml or json file.\nWill look relative to ",(0,o.jsx)(n.code,{children:"VAC_CONFIG_FOLDER"})," environment variable if available, else current directory."]}),"\n",(0,o.jsxs)(n.p,{children:["Args:\nfilename (str, optional): The name of the configuration file. Defaults to the ",(0,o.jsx)(n.code,{children:"_CONFIG_FILE"})," environment variable."]}),"\n",(0,o.jsx)(n.p,{children:"Returns:\ntuple[dict, str]: The configuration as a dictionary and the derived absolute filename."}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"config, filename = load_config('config.yaml')\nprint(f'Config: &#123;config&#125;')\nprint(f'Loaded from file: &#123;filename&#125;')\n"})}),"\n",(0,o.jsx)(n.h3,{id:"load_all_configs",children:"load_all_configs()"}),"\n",(0,o.jsx)(n.p,{children:"Load all configuration files from the specified directory into a dictionary.\nFiles are expected to be either YAML or JSON and must contain a 'kind' key at the root.\nCaching is used to avoid reloading files within a 5-minute window."}),"\n",(0,o.jsx)(n.h3,{id:"load_config_keykey-str-vector_name-str-kind-str",children:"load_config_key(key: str, vector_name: str, kind: str)"}),"\n",(0,o.jsx)(n.p,{children:"Load a specific key from a configuration file."}),"\n",(0,o.jsxs)(n.p,{children:["Args:\nkey (str): The key to fetch from the configuration.\nvector_name (str): The name of the vector in the configuration file.\nkind: (str, optional): Specify the type of configuration to retrieve e.g. 'vacConfig' which will pick from files within ",(0,o.jsx)(n.code,{children:"_CONFIG_FOLDER"})]}),"\n",(0,o.jsx)(n.p,{children:"Returns:\nstr: The value associated with the specified key."}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"api_url = load_config_key('apiUrl', 'myVector', kind=\"vacConfig\")\nprint(f'API URL: &#123;api_url&#125;')\n"})}),"\n",(0,o.jsx)(n.h3,{id:"get_module_filepathfilepath-str",children:"get_module_filepath(filepath: str)"}),"\n",(0,o.jsx)(n.p,{children:"Get the absolute path of a module file based on its relative path."}),"\n",(0,o.jsx)(n.p,{children:"Args:\nfilepath (str): The relative path of the file."}),"\n",(0,o.jsx)(n.p,{children:"Returns:\nstr: The absolute file path."}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"abs_path = get_module_filepath('config/config.yaml')\nprint(f'Absolute path: &#123;abs_path&#125;')\n"})}),"\n",(0,o.jsx)(n.h3,{id:"reload_config_fileconfig_file-filename",children:"reload_config_file(config_file, filename)"}),"\n",(0,o.jsx)(n.p,{children:"Helper function to load a config file and update the cache."})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var o=i(6540);const t={},l=o.createContext(t);function s(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);