"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4126],{2756:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=s(4848),i=s(8453);const a={},r="A2A Agent for VACs",l={id:"howto/a2a_agent",title:"A2A Agent for VACs",description:"This guide explains how to expose your Sunholo VAC (Virtual Agent Computer) functionality as an A2A (Agent-to-Agent) protocol agent, enabling your VACs to participate in multi-agent ecosystems and be discovered by other A2A-compatible systems.",source:"@site/docs/howto/a2a_agent.md",sourceDirName:"howto",slug:"/howto/a2a_agent",permalink:"/docs/howto/a2a_agent",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/howto/a2a_agent.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Installing Sunholo with uv",permalink:"/docs/howto/INSTALL_WITH_UV"},next:{title:"Creating your own VAC",permalink:"/docs/howto/creating_a_vac"}},o={},c=[{value:"Overview",id:"overview",level:2},{value:"What is A2A?",id:"what-is-a2a",level:2},{value:"Enabling A2A Agent",id:"enabling-a2a-agent",level:2},{value:"Agent Card Discovery",id:"agent-card-discovery",level:2},{value:"Available A2A Skills",id:"available-a2a-skills",level:2},{value:"1. VAC Query (vac_query_{vac_name})",id:"1-vac-query-vac_query_vac_name",level:3},{value:"2. VAC Stream (vac_stream_{vac_name})",id:"2-vac-stream-vac_stream_vac_name",level:3},{value:"3. VAC Memory Search (vac_memory_search_{vac_name})",id:"3-vac-memory-search-vac_memory_search_vac_name",level:3},{value:"Complete Example",id:"complete-example",level:2},{value:"Task Management",id:"task-management",level:2},{value:"Task States",id:"task-states",level:3},{value:"Example Task Request",id:"example-task-request",level:3},{value:"Streaming with SSE",id:"streaming-with-sse",level:3},{value:"Deploying to Google Cloud Run",id:"deploying-to-google-cloud-run",level:2},{value:"A2A Client Integration",id:"a2a-client-integration",level:2},{value:"Integration with Existing Endpoints",id:"integration-with-existing-endpoints",level:2},{value:"Configuration and Customization",id:"configuration-and-customization",level:2},{value:"VAC Selection",id:"vac-selection",level:3},{value:"Agent Metadata",id:"agent-metadata",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"A2A agent not enabled error",id:"a2a-agent-not-enabled-error",level:3},{value:"Empty skills list",id:"empty-skills-list",level:3},{value:"Task execution failures",id:"task-execution-failures",level:3},{value:"SSE streaming issues",id:"sse-streaming-issues",level:3},{value:"Relationship with MCP",id:"relationship-with-mcp",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"a2a-agent-for-vacs",children:"A2A Agent for VACs"})}),"\n",(0,t.jsx)(n.p,{children:"This guide explains how to expose your Sunholo VAC (Virtual Agent Computer) functionality as an A2A (Agent-to-Agent) protocol agent, enabling your VACs to participate in multi-agent ecosystems and be discovered by other A2A-compatible systems."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The A2A agent functionality transforms your Flask-based VAC application into an A2A protocol agent, making your VACs discoverable and interactable via the standardized Agent-to-Agent protocol. This enables seamless integration with other AI agents and multi-agent workflows while maintaining compatibility with existing VAC endpoints."}),"\n",(0,t.jsx)(n.h2,{id:"what-is-a2a",children:"What is A2A?"}),"\n",(0,t.jsx)(n.p,{children:"The Agent-to-Agent (A2A) protocol is an open standard initiated by Google Cloud that enables AI agents to communicate and collaborate across different platforms and frameworks. Key features include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Agent Discovery"}),": Automatic capability discovery via Agent Cards"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Task Management"}),': Standardized task lifecycle with states like "submitted", "working", "completed"']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Streaming Support"}),": Real-time updates via Server-Sent Events (SSE)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"JSON-RPC 2.0"}),": Standard communication protocol"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multi-Platform"}),": Works across clouds, platforms, and organizational boundaries"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"enabling-a2a-agent",children:"Enabling A2A Agent"}),"\n",(0,t.jsxs)(n.p,{children:["To enable A2A agent functionality in your VAC, set the ",(0,t.jsx)(n.code,{children:"enable_a2a_agent"})," parameter when initializing ",(0,t.jsx)(n.code,{children:"VACRoutes"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from flask import Flask\nfrom sunholo.agents.flask import VACRoutes\n\napp = Flask(__name__)\n\nvac_routes = VACRoutes(\n    app,\n    stream_interpreter=your_stream_interpreter,\n    vac_interpreter=your_vac_interpreter,  # Optional\n    enable_a2a_agent=True,  # Enable A2A agent endpoints\n    a2a_vac_names=["vac1", "vac2"]  # Optional: specify which VACs to expose\n)\n'})}),"\n",(0,t.jsx)(n.p,{children:"This will create the following A2A endpoints:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"/.well-known/agent.json"})," - Agent Card discovery"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"/a2a/tasks/send"})," - Create and execute tasks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"/a2a/tasks/sendSubscribe"})," - Create tasks with SSE streaming"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"/a2a/tasks/get"})," - Get task status"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"/a2a/tasks/cancel"})," - Cancel running tasks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"/a2a/tasks/pushNotification/set"})," - Push notification settings"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"agent-card-discovery",children:"Agent Card Discovery"}),"\n",(0,t.jsxs)(n.p,{children:["The Agent Card at ",(0,t.jsx)(n.code,{children:"/.well-known/agent.json"})," provides automatic discovery of your VAC's capabilities:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Sunholo VAC Agent",\n  "description": "Multi-VAC agent providing access to Sunholo Virtual Agent Computers",\n  "url": "https://your-app.run.app",\n  "version": "1.0.0",\n  "capabilities": [\n    "task_management",\n    "streaming", \n    "conversation",\n    "document_retrieval"\n  ],\n  "skills": [\n    {\n      "name": "vac_query_my_vac",\n      "description": "Send a query to My VAC and get a complete response using gemini-1.5-flash",\n      "input_schema": {\n        "type": "object",\n        "properties": {\n          "query": {\n            "type": "string",\n            "description": "The question or instruction to send to the VAC"\n          },\n          "chat_history": {\n            "type": "array",\n            "description": "Previous conversation history"\n          }\n        },\n        "required": ["query"]\n      }\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"available-a2a-skills",children:"Available A2A Skills"}),"\n",(0,t.jsx)(n.p,{children:"The A2A agent automatically generates skills based on your VAC configurations:"}),"\n",(0,t.jsx)(n.h3,{id:"1-vac-query-vac_query_vac_name",children:"1. VAC Query (vac_query_{vac_name})"}),"\n",(0,t.jsx)(n.p,{children:"Static queries that return complete responses."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"query"})," (string, required): The question or instruction"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"chat_history"})," (array, optional): Previous conversation history"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"context"})," (object, optional): Additional context parameters"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Response:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Complete answer with source documents and metadata"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-vac-stream-vac_stream_vac_name",children:"2. VAC Stream (vac_stream_{vac_name})"}),"\n",(0,t.jsx)(n.p,{children:"Streaming conversations with real-time updates."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"query"})," (string, required): The question or instruction"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"chat_history"})," (array, optional): Previous conversation history"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stream_settings"})," (object, optional): Streaming configuration"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Response:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Task ID for tracking streaming progress"}),"\n",(0,t.jsx)(n.li,{children:"Real-time updates via SSE"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-vac-memory-search-vac_memory_search_vac_name",children:"3. VAC Memory Search (vac_memory_search_{vac_name})"}),"\n",(0,t.jsx)(n.p,{children:"Search through the VAC's knowledge base (if memory is configured)."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"search_query"})," (string, required): The search query"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"limit"})," (integer, optional): Maximum results (default: 10)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"similarity_threshold"})," (number, optional): Minimum similarity score (default: 0.7)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Response:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Array of search results with scores and metadata"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'#!/usr/bin/env python3\nfrom flask import Flask\nfrom sunholo.agents.flask import VACRoutes\n\n# Your VAC interpreter functions\ndef my_stream_interpreter(question, vector_name, chat_history, **kwargs):\n    """Streaming interpreter for real-time responses."""\n    yield f"Processing query for VAC \'{vector_name}\': {question}\\n"\n    yield "Analyzing context...\\n"\n    yield {"answer": f"Final answer: {question}"}\n\ndef my_vac_interpreter(question, vector_name, chat_history, **kwargs):\n    """Static interpreter for complete responses."""\n    return {\n        "answer": f"Response from {vector_name}: {question}",\n        "source_documents": []\n    }\n\n# Create Flask app\napp = Flask(__name__)\n\n# Initialize with A2A agent enabled\nvac_routes = VACRoutes(\n    app,\n    stream_interpreter=my_stream_interpreter,\n    vac_interpreter=my_vac_interpreter,\n    enable_a2a_agent=True,\n    a2a_vac_names=["support_bot", "research_assistant"]\n)\n\nif __name__ == "__main__":\n    app.run(host="0.0.0.0", port=8080)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"task-management",children:"Task Management"}),"\n",(0,t.jsx)(n.p,{children:"A2A uses a task-based interaction model with the following lifecycle:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Task Creation"}),": Client sends task to ",(0,t.jsx)(n.code,{children:"/a2a/tasks/send"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Processing"}),": Task moves through states (submitted \u2192 working \u2192 completed)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Updates"}),": Real-time updates via ",(0,t.jsx)(n.code,{children:"/a2a/tasks/sendSubscribe"})," (SSE)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Completion"}),": Final result with artifacts and metadata"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"task-states",children:"Task States"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"submitted"}),": Task created and queued"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"working"}),": Task is being processed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"input-required"}),": Task needs additional input (rare)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"completed"}),": Task finished successfully"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"failed"}),": Task encountered an error"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"canceled"}),": Task was canceled by request"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-task-request",children:"Example Task Request"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/a2a/tasks/send \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "jsonrpc": "2.0",\n    "method": "tasks/send",\n    "params": {\n      "skillName": "vac_query_support_bot",\n      "input": {\n        "query": "How do I reset my password?",\n        "chat_history": []\n      },\n      "clientMetadata": {\n        "source": "customer_portal"\n      }\n    },\n    "id": "1"\n  }\'\n'})}),"\n",(0,t.jsx)(n.h3,{id:"streaming-with-sse",children:"Streaming with SSE"}),"\n",(0,t.jsx)(n.p,{children:"For real-time updates, use the SSE endpoint:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const eventSource = new EventSource('/a2a/tasks/sendSubscribe', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    jsonrpc: \"2.0\",\n    method: \"tasks/sendSubscribe\", \n    params: {\n      skillName: \"vac_stream_research_assistant\",\n      input: {\n        query: \"Explain quantum computing\",\n        stream_settings: {\n          wait_time: 5,\n          timeout: 180\n        }\n      }\n    },\n    id: \"2\"\n  })\n});\n\neventSource.onmessage = function(event) {\n  const update = JSON.parse(event.data);\n  if (update.type === 'task_update') {\n    console.log('Task progress:', update.data.progress);\n    if (update.data.state === 'completed') {\n      console.log('Final result:', update.data.artifacts);\n      eventSource.close();\n    }\n  }\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"deploying-to-google-cloud-run",children:"Deploying to Google Cloud Run"}),"\n",(0,t.jsx)(n.p,{children:"The A2A agent is designed to work seamlessly with Google Cloud Run:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Create Dockerfile:"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dockerfile",children:'FROM python:3.11-slim\n\nWORKDIR /app\n\n# Install dependencies\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\n\n# Install A2A support\nRUN pip install a2a-python\n\n# Copy application\nCOPY . .\n\n# Run the app\nCMD ["python", "app.py"]\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Build and deploy:"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Build container\ngcloud builds submit --tag gcr.io/YOUR_PROJECT/vac-a2a-agent\n\n# Deploy to Cloud Run\ngcloud run deploy vac-a2a-agent \\\n  --image gcr.io/YOUR_PROJECT/vac-a2a-agent \\\n  --port 8080 \\\n  --no-allow-unauthenticated \\\n  --region us-central1\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Authentication"}),": Cloud Run's IAM handles authentication automatically. A2A clients need the Cloud Run Invoker role."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"a2a-client-integration",children:"A2A Client Integration"}),"\n",(0,t.jsx)(n.p,{children:"Other A2A agents can discover and interact with your VACs:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Example A2A client code\nimport requests\n\n# Discover agent capabilities\nagent_card = requests.get(\'https://your-app.run.app/.well-known/agent.json\').json()\nprint(f"Available skills: {[skill[\'name\'] for skill in agent_card[\'skills\']]}")\n\n# Send a task\nresponse = requests.post(\'https://your-app.run.app/a2a/tasks/send\', json={\n  "jsonrpc": "2.0",\n  "method": "tasks/send", \n  "params": {\n    "skillName": "vac_query_support_bot",\n    "input": {\n      "query": "What are your business hours?"\n    }\n  },\n  "id": "client_123"\n}, headers={\'Authorization\': \'Bearer YOUR_TOKEN\'})\n\ntask_result = response.json()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-existing-endpoints",children:"Integration with Existing Endpoints"}),"\n",(0,t.jsx)(n.p,{children:"The A2A agent coexists with your existing VAC endpoints:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Direct VAC"}),": ",(0,t.jsx)(n.code,{children:"/vac/<vector_name>"})," and ",(0,t.jsx)(n.code,{children:"/vac/streaming/<vector_name>"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"MCP Server"}),": ",(0,t.jsx)(n.code,{children:"/mcp"})," (if enabled)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"A2A Agent"}),": ",(0,t.jsx)(n.code,{children:"/.well-known/agent.json"})," and ",(0,t.jsx)(n.code,{children:"/a2a/*"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"All endpoints share the same interpreter functions, ensuring consistent behavior across protocols."}),"\n",(0,t.jsx)(n.h2,{id:"configuration-and-customization",children:"Configuration and Customization"}),"\n",(0,t.jsx)(n.h3,{id:"vac-selection",children:"VAC Selection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Expose specific VACs\nvac_routes = VACRoutes(\n    app,\n    stream_interpreter=my_interpreter,\n    enable_a2a_agent=True,\n    a2a_vac_names=["customer_support", "technical_docs"]  # Only these VACs\n)\n\n# Auto-discover all VACs (default)\nvac_routes = VACRoutes(\n    app,\n    stream_interpreter=my_interpreter,\n    enable_a2a_agent=True\n    # a2a_vac_names=None discovers all configured VACs\n)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"agent-metadata",children:"Agent Metadata"}),"\n",(0,t.jsx)(n.p,{children:"The agent card automatically uses metadata from your VAC configurations:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"display_name"}),": Becomes the skill description"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"model"}),": Included in skill metadata"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"memory"}),": Determines if memory search skills are available"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"agent"}),": Included in capability descriptions"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"a2a-agent-not-enabled-error",children:"A2A agent not enabled error"}),"\n",(0,t.jsx)(n.p,{children:"Ensure you have:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Set ",(0,t.jsx)(n.code,{children:"enable_a2a_agent=True"})," in VACRoutes"]}),"\n",(0,t.jsxs)(n.li,{children:["Installed the A2A dependencies: ",(0,t.jsx)(n.code,{children:"pip install a2a-python"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"empty-skills-list",children:"Empty skills list"}),"\n",(0,t.jsx)(n.p,{children:"Check that:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Your VACs are properly configured in ",(0,t.jsx)(n.code,{children:"vac_config.yaml"})]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"a2a_vac_names"})," parameter includes valid VAC names"]}),"\n",(0,t.jsx)(n.li,{children:"VAC discovery is working: Check logs for configuration errors"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"task-execution-failures",children:"Task execution failures"}),"\n",(0,t.jsx)(n.p,{children:"Verify that:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Your ",(0,t.jsx)(n.code,{children:"stream_interpreter"})," and ",(0,t.jsx)(n.code,{children:"vac_interpreter"})," functions work correctly"]}),"\n",(0,t.jsx)(n.li,{children:"VAC names in skill requests match configured VACs"}),"\n",(0,t.jsx)(n.li,{children:"Input parameters match the expected schema"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"sse-streaming-issues",children:"SSE streaming issues"}),"\n",(0,t.jsx)(n.p,{children:"Ensure:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Client properly handles ",(0,t.jsx)(n.code,{children:"text/event-stream"})," content type"]}),"\n",(0,t.jsx)(n.li,{children:"Connection timeouts are configured appropriately"}),"\n",(0,t.jsx)(n.li,{children:"Task cancellation works if connections are dropped"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"relationship-with-mcp",children:"Relationship with MCP"}),"\n",(0,t.jsx)(n.p,{children:"A2A complements the Model Context Protocol (MCP):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"MCP"}),": Tool-focused protocol for extending agent capabilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"A2A"}),": Agent-focused protocol for agent-to-agent communication"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"You can enable both protocols simultaneously:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"vac_routes = VACRoutes(\n    app,\n    stream_interpreter=my_interpreter,\n    enable_mcp_server=True,   # MCP tools\n    enable_a2a_agent=True     # A2A agent communication\n)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This creates a multi-protocol agent platform that can:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Serve as MCP tools for other agents"}),"\n",(0,t.jsx)(n.li,{children:"Participate in A2A agent ecosystems"}),"\n",(0,t.jsx)(n.li,{children:"Provide direct VAC access via HTTP"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/howto/creating_a_vac",children:"Creating a VAC"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/howto/mcp_server",children:"MCP Server for VACs"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/howto/flask_app",children:"Flask App Development"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.a2aprotocol.net/docs/specification",children:"A2A Protocol Specification"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://cloud.google.com/run/docs",children:"Google Cloud Run Documentation"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(6540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);