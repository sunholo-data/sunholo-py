"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2514],{1060:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var t=s(4848),r=s(8453);const a={},i="vac_a2a_agent.py",l={id:"src/sunholo/a2a/vac_a2a_agent",title:"vac_a2a_agent.py",description:"Source: src/sunholo/a2a/vaca2aagent.py",source:"@site/docs/src/sunholo/a2a/vac_a2a_agent.md",sourceDirName:"src/sunholo/a2a",slug:"/src/sunholo/a2a/vac_a2a_agent",permalink:"/docs/src/sunholo/a2a/vac_a2a_agent",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/src/sunholo/a2a/vac_a2a_agent.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"task_manager.py",permalink:"/docs/src/sunholo/a2a/task_manager"},next:{title:"chat_history.py",permalink:"/docs/src/sunholo/agents/chat_history"}},c={},o=[{value:"Classes",id:"classes",level:2},{value:"VACA2AAgent",id:"vaca2aagent",level:3}];function d(n){const e={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"vac_a2a_agentpy",children:"vac_a2a_agent.py"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"Source"}),": ",(0,t.jsx)(e.a,{href:"https://github.com/sunholo-data/sunholo-py/blob/main/src/sunholo/a2a/vac_a2a_agent.py",children:"src/sunholo/a2a/vac_a2a_agent.py"})]}),"\n",(0,t.jsx)(e.h2,{id:"classes",children:"Classes"}),"\n",(0,t.jsx)(e.h3,{id:"vaca2aagent",children:"VACA2AAgent"}),"\n",(0,t.jsx)(e.p,{children:"A2A Agent implementation for Sunholo VACs."}),"\n",(0,t.jsx)(e.p,{children:"This class wraps VAC functionality to be compatible with the\nAgent-to-Agent protocol, allowing VACs to participate in A2A ecosystems."}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"init"}),"(self, base_url: str, stream_interpreter: Callable, vac_interpreter: Optional[Callable] = None, vac_names: Optional[List[str]] = None, agent_config: Optional[Dict[str, Any]] = None)","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Initialize the A2A agent."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Args:\nbase_url: Base URL where the agent is hosted\nstream_interpreter: Function for streaming VAC interactions\nvac_interpreter: Function for static VAC interactions (optional)\nvac_names: List of VAC names to expose (discovers all if None)\nagent_config: Additional agent configuration"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["_create_error_response(self, request_id: Any, error_code: int, error_message: str) -> Dict[str, Any]","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Create a JSON-RPC error response."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Args:\nrequest_id: The request ID\nerror_code: JSON-RPC error code\nerror_message: Error message"}),"\n",(0,t.jsx)(e.p,{children:"Returns:\nJSON-RPC error response"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["_estimate_task_duration(self, skill_name: str, input_data: Dict[str, Any]) -> float","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Estimate task duration in seconds."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Args:\nskill_name: Name of the skill\ninput_data: Input parameters"}),"\n",(0,t.jsx)(e.p,{children:"Returns:\nEstimated duration in seconds"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["get_agent_card(self) -> Dict[str, Any]","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Get the agent card for A2A discovery."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Returns:\nAgent card dictionary"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["get_discovery_endpoints(self) -> Dict[str, str]","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Get the A2A discovery endpoint paths."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Returns:\nDictionary mapping endpoint names to their paths"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["get_stats(self) -> Dict[str, Any]","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Get agent statistics."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Returns:\nDictionary with agent statistics"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["handle_push_notification_set(self, request_data: Dict[str, Any]) -> Dict[str, Any]","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Handle A2A push notification settings."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Args:\nrequest_data: JSON-RPC request data"}),"\n",(0,t.jsx)(e.p,{children:"Returns:\nJSON-RPC response data"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["handle_task_cancel(self, request_data: Dict[str, Any]) -> Dict[str, Any]","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Handle A2A task cancel request."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Args:\nrequest_data: JSON-RPC request data"}),"\n",(0,t.jsx)(e.p,{children:"Returns:\nJSON-RPC response data"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["handle_task_get(self, request_data: Dict[str, Any]) -> Dict[str, Any]","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Handle A2A task get request."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Args:\nrequest_data: JSON-RPC request data"}),"\n",(0,t.jsx)(e.p,{children:"Returns:\nJSON-RPC response data"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["handle_task_send(self, request_data: Dict[str, Any]) -> Dict[str, Any]","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Handle A2A task send request."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Args:\nrequest_data: JSON-RPC request data"}),"\n",(0,t.jsx)(e.p,{children:"Returns:\nJSON-RPC response data"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["handle_task_send_subscribe(self, request_data: Dict[str, Any]) -> AsyncGenerator[str, NoneType]","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Handle A2A task send with subscription (SSE)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Args:\nrequest_data: JSON-RPC request data"}),"\n",(0,t.jsx)(e.p,{children:"Yields:\nServer-sent event data strings"})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>i,x:()=>l});var t=s(6540);const r={},a=t.createContext(r);function i(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),t.createElement(a.Provider,{value:e},n.children)}}}]);