"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3085],{5839:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>t,default:()=>m,frontMatter:()=>c,metadata:()=>o,toc:()=>a});var r=s(4848),l=s(8453);const c={},t="mcp_manager.py",o={id:"src/sunholo/mcp/mcp_manager",title:"mcp_manager.py",description:"Source: src/sunholo/mcp/mcpmanager.py",source:"@site/docs/src/sunholo/mcp/mcp_manager.md",sourceDirName:"src/sunholo/mcp",slug:"/src/sunholo/mcp/mcp_manager",permalink:"/docs/src/sunholo/mcp/mcp_manager",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/src/sunholo/mcp/mcp_manager.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"extensible_mcp_server.py",permalink:"/docs/src/sunholo/mcp/extensible_mcp_server"},next:{title:"sse_utils.py",permalink:"/docs/src/sunholo/mcp/sse_utils"}},i={},a=[{value:"Classes",id:"classes",level:2},{value:"MCPClientManager",id:"mcpclientmanager",level:3}];function p(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mcp_managerpy",children:"mcp_manager.py"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Source"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/sunholo-data/sunholo-py/blob/main/src/sunholo/mcp/mcp_manager.py",children:"src/sunholo/mcp/mcp_manager.py"})]}),"\n",(0,r.jsx)(n.h2,{id:"classes",children:"Classes"}),"\n",(0,r.jsx)(n.h3,{id:"mcpclientmanager",children:"MCPClientManager"}),"\n",(0,r.jsx)(n.p,{children:"Manages MCP client connections to various MCP servers."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"init"}),"(self)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Initialize self.  See help(type(self)) for accurate signature."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"call_tool(self, server_name: str, tool_name: str, arguments: Dict[str, Any]) -> mcp.types.CallToolResult"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Call a tool on a specific MCP server."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"connect_to_server(self, server_name: str, command: str, args: List[str] = None) -> None"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Connect to an MCP server via stdio."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"list_resources(self, server_name: Optional[str] = None) -> List[mcp.types.Resource]"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"List available resources from servers."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"list_tools(self, server_name: Optional[str] = None) -> List[mcp.types.Tool]"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"List available tools from one or all connected servers."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"read_resource(self, server_name: str, uri: str) -> List[mcp.types.TextContent]"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Read a resource from an MCP server."}),"\n"]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var r=s(6540);const l={},c=r.createContext(l);function t(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);