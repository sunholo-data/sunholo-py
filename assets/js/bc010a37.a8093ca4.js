"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9788],{8762:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=s(4848),a=s(8453);const o={},r="PostgreSQL databases",i={id:"databases/postgres",title:"PostgreSQL databases",description:"When connecting to a PostgreSQL database you can use them for several different GenAI services, such as embeddings, document stores, chat history or analytics.",source:"@site/docs/databases/postgres.md",sourceDirName:"databases",slug:"/databases/postgres",permalink:"/docs/databases/postgres",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/databases/postgres.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LanceDB",permalink:"/docs/databases/lancedb"},next:{title:"Supabase",permalink:"/docs/databases/supabase"}},d={},c=[{value:"Embedding",id:"embedding",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"postgresql-databases",children:"PostgreSQL databases"})}),"\n",(0,t.jsx)(n.p,{children:"When connecting to a PostgreSQL database you can use them for several different GenAI services, such as embeddings, document stores, chat history or analytics."}),"\n",(0,t.jsx)(n.p,{children:"An alternative to running your own PostgreSQL database is to use the AlloyDB managed service on Google Cloud Platform."}),"\n",(0,t.jsx)(n.h2,{id:"embedding",children:"Embedding"}),"\n",(0,t.jsxs)(n.p,{children:["When connecting to a PostgreSQL database for vector embeddings, the ",(0,t.jsx)(n.code,{children:"pgvector"})," extension needs to be installed within the database - refer to the documentation for the specific provider."]}),"\n",(0,t.jsxs)(n.p,{children:["When you have the requisite details, then you need a username, password, ip of the PostgreSQL database and the database used to be put into a connection string and set to the ",(0,t.jsx)(n.code,{children:"PGVECTOR_CONNECTION_STRING"})," environment variable - an example is shown below:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"PGVECTOR_CONNECTION_STRING=postgresql://user:password@1.2.3.4:5432/database\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To use within sunholo, you can use the ",(0,t.jsx)(n.code,{children:"pick_retriever()"})," function to pull in the configuration dynamically according to the ",(0,t.jsx)(n.code,{children:"vector_name"})," argument."]}),"\n",(0,t.jsx)(n.p,{children:"A configuration can be set that will send embeddings after chunking to the database."}),"\n",(0,t.jsx)(n.p,{children:"An example config is shown below:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'kind: vacConfig\napiVersion: v1\nvac:\n  sample_vector:\n    llm: openai\n    agent: langserve\n    memory:\n      - azure_postgres:\n          vectorstore: "postgres"\n'})}),"\n",(0,t.jsx)(n.p,{children:"This will then return the retriever via"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'retriever = pick_retriever("sample_vector")\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>i});var t=s(6540);const a={},o=t.createContext(a);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);