"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3898],{1833:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>a,frontMatter:()=>c,metadata:()=>d,toc:()=>l});var s=n(4848),i=n(8453);const c={},r="type_dict_to_json.py",d={id:"src/sunholo/vertex/type_dict_to_json",title:"type_dict_to_json.py",description:"Source: src/sunholo/vertex/typedicttojson.py",source:"@site/docs/src/sunholo/vertex/type_dict_to_json.md",sourceDirName:"src/sunholo/vertex",slug:"/src/sunholo/vertex/type_dict_to_json",permalink:"/docs/src/sunholo/vertex/type_dict_to_json",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/src/sunholo/vertex/type_dict_to_json.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"safety.py",permalink:"/docs/src/sunholo/vertex/safety"},next:{title:"User Interfaces",permalink:"/docs/ui/"}},o={},l=[{value:"Functions",id:"functions",level:2},{value:"describe_typed_dict(typed_dict_cls: Any, descriptions: Dict[str, str]) -&gt; Dict[str, Any]",id:"describe_typed_dicttyped_dict_cls-any-descriptions-dictstr-str---dictstr-any",level:3},{value:"is_typed_dict(cls)",id:"is_typed_dictcls",level:3},{value:"openapi_to_typed_dict(openapi_spec: Dict[str, Any], schema_name: str) -&gt; Any",id:"openapi_to_typed_dictopenapi_spec-dictstr-any-schema_name-str---any",level:3},{value:"resolve_ref(openapi_spec: Dict[str, Any], ref: str) -&gt; Dict[str, Any]",id:"resolve_refopenapi_spec-dictstr-any-ref-str---dictstr-any",level:3}];function p(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"type_dict_to_jsonpy",children:"type_dict_to_json.py"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.em,{children:"Source"}),": ",(0,s.jsx)(t.a,{href:"https://github.com/sunholo-data/sunholo-py/blob/main/src/sunholo/vertex/type_dict_to_json.py",children:"src/sunholo/vertex/type_dict_to_json.py"})]}),"\n",(0,s.jsx)(t.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(t.h3,{id:"describe_typed_dicttyped_dict_cls-any-descriptions-dictstr-str---dictstr-any",children:"describe_typed_dict(typed_dict_cls: Any, descriptions: Dict[str, str]) -> Dict[str, Any]"}),"\n",(0,s.jsx)(t.p,{children:"Generate a dictionary with field descriptions."}),"\n",(0,s.jsx)(t.p,{children:"Parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"typed_dict_cls: The TypedDict class."}),"\n",(0,s.jsx)(t.li,{children:"descriptions: The dictionary containing field descriptions."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Returns:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A dictionary with field descriptions."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"is_typed_dictcls",children:"is_typed_dict(cls)"}),"\n",(0,s.jsx)(t.p,{children:"Check if a class is a TypedDict."}),"\n",(0,s.jsx)(t.h3,{id:"openapi_to_typed_dictopenapi_spec-dictstr-any-schema_name-str---any",children:"openapi_to_typed_dict(openapi_spec: Dict[str, Any], schema_name: str) -> Any"}),"\n",(0,s.jsx)(t.p,{children:"Convert an OpenAPI schema to a TypedDict dynamically."}),"\n",(0,s.jsx)(t.p,{children:"Parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"openapi_spec: The OpenAPI specification."}),"\n",(0,s.jsx)(t.li,{children:"schema_name: The name of the schema to convert."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Returns:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A dynamically created TypedDict class and field descriptions."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"resolve_refopenapi_spec-dictstr-any-ref-str---dictstr-any",children:"resolve_ref(openapi_spec: Dict[str, Any], ref: str) -> Dict[str, Any]"}),"\n",(0,s.jsx)(t.p,{children:"Resolve a $ref in the OpenAPI spec."}),"\n",(0,s.jsx)(t.p,{children:"Parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"openapi_spec: The OpenAPI specification."}),"\n",(0,s.jsx)(t.li,{children:"ref: The reference string."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Returns:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The resolved schema."}),"\n"]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var s=n(6540);const i={},c=s.createContext(i);function r(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);