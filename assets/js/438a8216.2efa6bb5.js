"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5334],{8110:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>o});var r=s(4848),t=s(8453);const a={},i="agent_card.py",c={id:"src/sunholo/a2a/agent_card",title:"agent_card.py",description:"Source: src/sunholo/a2a/agentcard.py",source:"@site/docs/src/sunholo/a2a/agent_card.md",sourceDirName:"src/sunholo/a2a",slug:"/src/sunholo/a2a/agent_card",permalink:"/docs/src/sunholo/a2a/agent_card",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/src/sunholo/a2a/agent_card.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Multivac Cloud",permalink:"/docs/multivac/"},next:{title:"task_manager.py",permalink:"/docs/src/sunholo/a2a/task_manager"}},l={},o=[{value:"Classes",id:"classes",level:2},{value:"AgentCardGenerator",id:"agentcardgenerator",level:3}];function d(n){const e={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"agent_cardpy",children:"agent_card.py"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"Source"}),": ",(0,r.jsx)(e.a,{href:"https://github.com/sunholo-data/sunholo-py/blob/main/src/sunholo/a2a/agent_card.py",children:"src/sunholo/a2a/agent_card.py"})]}),"\n",(0,r.jsx)(e.h2,{id:"classes",children:"Classes"}),"\n",(0,r.jsx)(e.h3,{id:"agentcardgenerator",children:"AgentCardGenerator"}),"\n",(0,r.jsx)(e.p,{children:"Generates A2A Agent Cards for VAC discovery."}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"init"}),"(self, base_url: str, config_manager: Optional[sunholo.utils.config_class.ConfigManager] = None)","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Initialize the Agent Card generator."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Args:\nbase_url: The base URL where the A2A agent is hosted\nconfig_manager: Optional ConfigManager for global configs"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["_discover_vacs(self) -> List[str]","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Discover all configured VACs from the configuration."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Returns:\nList of VAC names found in the configuration"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["_generate_vac_skills(self, vac_name: str, vac_config: sunholo.utils.config_class.ConfigManager) -> List[Dict[str, Any]]","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Generate A2A skills for a specific VAC."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Args:\nvac_name: Name of the VAC\nvac_config: ConfigManager instance for the VAC"}),"\n",(0,r.jsx)(e.p,{children:"Returns:\nList of skill definitions for this VAC"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"_get_current_timestamp(self) -> str"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Get current timestamp in ISO format."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"_get_max_context_length(self, vac_names: List[str]) -> int"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Determine the maximum context length based on configured models."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Args:\nvac_names: List of VAC names to check"}),"\n",(0,r.jsx)(e.p,{children:"Returns:\nMaximum context length in tokens"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["generate_agent_card(self, vac_names: List[str] = None) -> Dict[str, Any]","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Generate the Agent Card JSON for A2A discovery."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Args:\nvac_names: List of VAC names to include. If None, discovers all configured VACs."}),"\n",(0,r.jsx)(e.p,{children:"Returns:\nDict containing the Agent Card JSON structure"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["generate_discovery_endpoints(self) -> Dict[str, str]","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Generate the A2A discovery endpoint paths."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Returns:\nDictionary mapping endpoint names to their paths"})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>i,x:()=>c});var r=s(6540);const t={},a=r.createContext(t);function i(n){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:i(n.components),r.createElement(a.Provider,{value:e},n.children)}}}]);